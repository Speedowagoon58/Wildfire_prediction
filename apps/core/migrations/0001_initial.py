# Generated by Django 5.0.1 on 2025-04-04 04:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('elevation', models.FloatField(help_text='Elevation in meters')),
                ('area', models.FloatField(help_text='Area in square kilometers')),
                ('population', models.IntegerField(help_text='Population in the region')),
                ('vegetation_density', models.FloatField(default=0.5, help_text='Vegetation density (0-1)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('climate_zone', models.CharField(choices=[('mediterranean', 'Mediterranean'), ('semi_arid', 'Semi-Arid'), ('temperate', 'Temperate')], default='mediterranean', help_text='Climate zone classification for the region', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoilType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('fire_risk_factor', models.FloatField(default=1.0, help_text='Multiplier for wildfire risk based on soil type (0.5-2.0)')),
                ('moisture_retention', models.FloatField(default=0.5, help_text="Soil's ability to retain moisture (0-1)")),
                ('organic_matter', models.FloatField(default=2.0, help_text='Percentage of organic matter in soil')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('population', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='core.region')),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.AddField(
            model_name='region',
            name='soil_type',
            field=models.ForeignKey(blank=True, help_text='Predominant soil type in the region', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.soiltype'),
        ),
        migrations.CreateModel(
            name='WildfireEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('severity', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Extreme')])),
                ('area_affected', models.FloatField(help_text='Area affected in square kilometers')),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.region')),
            ],
        ),
    ]
